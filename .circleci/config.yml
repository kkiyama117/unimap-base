# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#

version: 2
jobs:
  build:
    parallelism: 1
    docker:
      - image: circleci/python:3.6.1
        environment:
         DJANGO_SETTINGS_MODULE: config.settings.circleci
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install postgresql-9.6-postgis-2.4 postgresql-9.6-postgis-2.4-scripts postgis binutils libproj-dev gdal-bin
            python3 -m venv .venv
            . .venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./.venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: initialize
          command: |
            . .venv/bin/activate
            python manage.py makemigrations
            python manage.py migrate

      - run:
          name: run pytest
          command: |
            . .venv/bin/activate
            pytest
            codecov --token=$CODE_COV_TOKEN

      - store_artifacts:
          path: test-reports
          destination: test-reports

  deploy:
    parallelism: 1
    docker:
      - image: circleci/python:3.6.1

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv .venv
            . .venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./.venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: verify git tag vs. version in setup.py
          command: |
            . .venv/bin/activate
            python setup.py verify

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = kkiyama117" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: create packages
          command: |
            . .venv/bin/activate
            python setup.py sdist bdist_wheel

      - run:
          name: upload to pypi
          command: |
            . .venv/bin/activate
            twine upload dist/*

      - store_artifacts:
          path: deploy-reports
          destination: deploy-reports

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
